(function(){"use strict";var __webpack_modules__={915:function(){eval("\n;// CONCATENATED MODULE: ./src/utils/utils.js\nconst createDomNode = (elem, ...classes) => {\r\n  const node = document.createElement(elem);\r\n  node.classList.add(...classes);\r\n  return node;\r\n};\r\n\n;// CONCATENATED MODULE: ./src/components/Key/Key.js\n\r\n\r\n\r\nclass Key {\r\n  constructor(objKey, ...classes) {\r\n    this.key = '';\r\n    this.objKey = objKey;\r\n    this.classes = classes;\r\n  }\r\n\r\n  createKey(lang) {\r\n    this.key = createDomNode('div', 'key', ...this.classes);\r\n    this.addInnerText(lang);\r\n    this.addCode();\r\n    return this.key;\r\n  }\r\n\r\n  addInnerText(lang) {\r\n    if (lang === 'en') {\r\n      this.key.innerText = this.objKey.charEn;\r\n    } else {\r\n      this.key.innerText = this.objKey.charRu;\r\n    }\r\n  }\r\n\r\n  addCode() {\r\n    if (!this.classes.includes('key_dark')) {\r\n      this.key.dataset.code = this.objKey.code;\r\n    }\r\n  }\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/Key/index.js\n\r\n\n;// CONCATENATED MODULE: ./src/utils/keys.js\nconst keys = {\r\n  Digit1: {\r\n    code: 'Digit1',\r\n    charRu: '1',\r\n    charEn: '1',\r\n  },\r\n  Digit2: {\r\n    code: 'Digit2',\r\n    charRu: '2',\r\n    charEn: '2',\r\n  },\r\n  Digit3: {\r\n    code: 'Digit3',\r\n    charRu: '3',\r\n    charEn: '3',\r\n  },\r\n  Digit4: {\r\n    code: 'Digit4',\r\n    charRu: '4',\r\n    charEn: '4',\r\n  },\r\n  Digit5: {\r\n    code: 'Digit5',\r\n    charRu: '5',\r\n    charEn: '5',\r\n  },\r\n  Digit6: {\r\n    code: 'Digit6',\r\n    charRu: '6',\r\n    charEn: '6',\r\n  },\r\n  Digit7: {\r\n    code: 'Digit7',\r\n    charRu: '7',\r\n    charEn: '7',\r\n  },\r\n  Digit8: {\r\n    code: 'Digit8',\r\n    charRu: '8',\r\n    charEn: '8',\r\n  },\r\n  Digit9: {\r\n    code: 'Digit9',\r\n    charRu: '9',\r\n    charEn: '9',\r\n  },\r\n  Digit0: {\r\n    code: 'Digit0',\r\n    charRu: '8',\r\n    charEn: '8',\r\n  },\r\n  Backquote: {\r\n    code: 'Backquote',\r\n    charRu: 'ё',\r\n    charEn: '`',\r\n  },\r\n  NumpadSubtract: {\r\n    code: 'NumpadSubtract',\r\n    charRu: '-',\r\n    charEn: '-',\r\n  },\r\n  Equal: {\r\n    code: 'Equal',\r\n    charRu: '=',\r\n    charEn: '=',\r\n  },\r\n  KeyQ: {\r\n    code: 'KeyQ',\r\n    charRu: 'й',\r\n    charEn: 'q',\r\n  },\r\n  KeyW: {\r\n    code: 'KeyW',\r\n    charRu: 'ц',\r\n    charEn: 'w',\r\n  },\r\n  KeyE: {\r\n    code: 'KeyE',\r\n    charRu: 'у',\r\n    charEn: 'e',\r\n  },\r\n  KeyR: {\r\n    code: 'KeyR',\r\n    charRu: 'к',\r\n    charEn: 'r',\r\n  },\r\n  KeyT: {\r\n    code: 'KeyT',\r\n    charRu: 'е',\r\n    charEn: 't',\r\n  },\r\n  KeyY: {\r\n    code: 'KeyY',\r\n    charRu: 'н',\r\n    charEn: 'y',\r\n  },\r\n  KeyU: {\r\n    code: 'KeyU',\r\n    charRu: 'г',\r\n    charEn: 'u',\r\n  },\r\n  KeyI: {\r\n    code: 'KeyI',\r\n    charRu: 'ш',\r\n    charEn: 'i',\r\n  },\r\n  KeyO: {\r\n    code: 'KeyO',\r\n    charRu: 'щ',\r\n    charEn: 'o',\r\n  },\r\n  KeyP: {\r\n    code: 'KeyP',\r\n    charRu: 'з',\r\n    charEn: 'p',\r\n  },\r\n  BracketLeft: {\r\n    code: 'BracketLeft',\r\n    charRu: 'х',\r\n    charEn: '[',\r\n  },\r\n  BracketRight: {\r\n    code: 'BracketRight',\r\n    charRu: 'ъ',\r\n    charEn: ']',\r\n  },\r\n  KeyA: {\r\n    code: 'KeyA',\r\n    charRu: 'ф',\r\n    charEn: 'a',\r\n  },\r\n  KeyS: {\r\n    code: 'KeyS',\r\n    charRu: 'ы',\r\n    charEn: 's',\r\n  },\r\n  KeyD: {\r\n    code: 'KeyD',\r\n    charRu: 'в',\r\n    charEn: 'd',\r\n  },\r\n  KeyF: {\r\n    code: 'KeyF',\r\n    charRu: 'а',\r\n    charEn: 'f',\r\n  },\r\n  KeyG: {\r\n    code: 'KeyG',\r\n    charRu: 'п',\r\n    charEn: 'g',\r\n  },\r\n  KeyH: {\r\n    code: 'KeyH',\r\n    charRu: 'р',\r\n    charEn: 'h',\r\n  },\r\n  KeyJ: {\r\n    code: 'KeyJ',\r\n    charRu: 'о',\r\n    charEn: 'j',\r\n  },\r\n  KeyK: {\r\n    code: 'KeyK',\r\n    charRu: 'л',\r\n    charEn: 'k',\r\n  },\r\n  KeyL: {\r\n    code: 'KeyL',\r\n    charRu: 'д',\r\n    charEn: 'l',\r\n  },\r\n  Semicolon: {\r\n    code: 'Semicolon',\r\n    charRu: 'ж',\r\n    charEn: ';',\r\n  },\r\n  Quote: {\r\n    code: 'Quote',\r\n    charRu: 'э',\r\n    charEn: '\\'',\r\n  },\r\n  KeyZ: {\r\n    code: 'KeyZ',\r\n    charRu: 'я',\r\n    charEn: 'z',\r\n  },\r\n  KeyX: {\r\n    code: 'KeyX',\r\n    charRu: 'ч',\r\n    charEn: 'x',\r\n  },\r\n  KeyC: {\r\n    code: 'KeyC',\r\n    charRu: 'с',\r\n    charEn: 'c',\r\n  },\r\n  KeyV: {\r\n    code: 'KeyV',\r\n    charRu: 'м',\r\n    charEn: 'v',\r\n  },\r\n  KeyB: {\r\n    code: 'KeyB',\r\n    charRu: 'и',\r\n    charEn: 'b',\r\n  },\r\n  KeyN: {\r\n    code: 'KeyN',\r\n    charRu: 'т',\r\n    charEn: 'n',\r\n  },\r\n  KeyM: {\r\n    code: 'KeyM',\r\n    charRu: 'ь',\r\n    charEn: 'm',\r\n  },\r\n  NumpadDecimal: {\r\n    code: 'NumpadDecimal',\r\n    charRu: 'б',\r\n    charEn: ',',\r\n  },\r\n  Period: {\r\n    code: 'Period',\r\n    charRu: 'ю',\r\n    charEn: '.',\r\n  },\r\n  Slash: {\r\n    code: 'Slash',\r\n    charRu: '.',\r\n    charEn: '/',\r\n  },\r\n  Space: {\r\n    code: 'Space',\r\n    charRu: ' ',\r\n    charEn: ' ',\r\n  },\r\n  Backslash: {\r\n    code: 'Backslash',\r\n    charRu: '\\\\',\r\n    charEn: '\\\\',\r\n  },\r\n};\r\n\n;// CONCATENATED MODULE: ./src/components/Keybord/Keybord.js\n\r\n\r\n\r\n\r\n\r\nclass Keybord {\r\n  constructor(lang) {\r\n    this.lang = lang;\r\n    this.keybord = '';\r\n    this.keybordWrapper = '';\r\n    this.keybordRow1 = '';\r\n    this.keybordRow2 = '';\r\n    this.keybordRow3 = '';\r\n    this.keybordRow4 = '';\r\n    this.keybordRow5 = '';\r\n  }\r\n\r\n  createKeybord() {\r\n    this.keybord = createDomNode('div', 'keybord');\r\n    this.keybord.dataset.language = this.lang;\r\n    this.keybordWrapper = createDomNode('div', 'keybord__wrapper');\r\n    this.keybord.append(this.keybordWrapper);\r\n\r\n    this.keybordRow1 = createDomNode('div', 'keybord__row');\r\n    const codesOfRow1 = ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'NumpadSubtract', 'Equal'];\r\n    this.repeatedlyAddKey(this.keybordRow1, codesOfRow1);\r\n    addDarkKey('125px', 'Backspace', this.keybordRow1);\r\n    this.keybordWrapper.append(this.keybordRow1);\r\n\r\n    this.keybordRow2 = createDomNode('div', 'keybord__row');\r\n    const codesOfRow2 = ['KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash'];\r\n    addDarkKey('62px', 'Tab', this.keybordRow2);\r\n    this.repeatedlyAddKey(this.keybordRow2, codesOfRow2);\r\n    addDarkKey('53px', 'Del', this.keybordRow2, 'Delete');\r\n    this.keybordWrapper.append(this.keybordRow2);\r\n\r\n    this.keybordRow3 = createDomNode('div', 'keybord__row');\r\n    const charsOfRow3 = ['KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote'];\r\n    addDarkKey('124px', 'CapsLock', this.keybordRow3);\r\n    this.repeatedlyAddKey(this.keybordRow3, charsOfRow3);\r\n    addDarkKey('110px', 'Enter', this.keybordRow3);\r\n    this.keybordWrapper.append(this.keybordRow3);\r\n\r\n    this.keybordRow4 = createDomNode('div', 'keybord__row');\r\n    const codesOfRow4 = ['KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'NumpadDecimal', 'Period', 'Slash'];\r\n    addDarkKey('125px', 'Shift', this.keybordRow4, 'ShiftLeft');\r\n    this.repeatedlyAddKey(this.keybordRow4, codesOfRow4);\r\n    addDarkKey('50px', '⯅', this.keybordRow4, 'ArrowUp');\r\n    addDarkKey('110px', 'Shift', this.keybordRow4, 'ShiftRight');\r\n    this.keybordWrapper.append(this.keybordRow4);\r\n\r\n    this.keybordRow5 = createDomNode('div', 'keybord__row');\r\n    addDarkKey('50px', 'Ctrl', this.keybordRow5, 'ControlLeft');\r\n    addDarkKey('50px', 'Win', this.keybordRow5);\r\n    addDarkKey('50px', 'Alt', this.keybordRow5, 'AltLeft');\r\n    addSpaceKey(this.keybordRow5);\r\n    addDarkKey('50px', 'Alt', this.keybordRow5, 'AltRight');\r\n    addDarkKey('50px', '⯇', this.keybordRow5, 'ArrowLeft');\r\n    addDarkKey('50px', '⯆', this.keybordRow5, 'ArrowDown');\r\n    addDarkKey('50px', '⯈', this.keybordRow5, 'ArrowRight');\r\n    addDarkKey('53px', 'Ctrl', this.keybordRow5, 'ControlRight');\r\n    this.keybordWrapper.append(this.keybordRow5);\r\n\r\n    return this.keybord;\r\n  }\r\n\r\n  repeatedlyAddKey(node, codes) {\r\n    for (let i = 0; i < codes.length; i++) {\r\n      const key = new Key(keys[codes[i]]).createKey(this.lang);\r\n      node.append(key);\r\n    }\r\n  }\r\n}\r\n\r\nfunction addDarkKey(width, text, node, data = text) {\r\n  const key = createDomNode('div', 'key_dark', 'key');\r\n  key.innerText = text;\r\n  key.style.width = width;\r\n  key.dataset.code = data;\r\n  node.append(key);\r\n}\r\n\r\nfunction addSpaceKey(node) {\r\n  const key = createDomNode('div', 'key');\r\n  key.innerText = ' ';\r\n  key.style.width = '425px';\r\n  key.dataset.code = 'Space';\r\n  node.append(key);\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/Keybord/index.js\n\r\n\n;// CONCATENATED MODULE: ./src/utils/letters.js\nconst LETTERSru = new Map(\r\n  [\r\n    ['q', 'й'], ['w', 'ц'], ['e', 'у'], ['r', 'к'], ['t', 'е'], ['y', 'н'], ['u', 'г'], ['i', 'ш'], ['o', 'щ'], ['p', 'з'], ['[', 'х'], [']', 'ъ'], ['a', 'ф'],\r\n    ['s', 'ы'], ['d', 'в'], ['f', 'а'], ['g', 'п'], ['h', 'р'], ['j', 'о'], ['k', 'л'], ['l', 'д'], [';', 'ж'], ['\\'', 'э'], ['z', 'я'], ['x', 'ч'], ['c', 'с'],\r\n    ['v', 'м'], ['b', 'и'], ['n', 'т'], ['m', 'ь'], [',', 'б'], ['.', 'ю'], ['/', '.'], ['`', 'ё'],\r\n  ],\r\n);\r\nconst LETTERSen = new Map(\r\n  [\r\n    ['й', 'q'], ['ц', 'w'], ['у', 'e'], ['к', 'r'], ['е', 't'], ['н', 'y'], ['г', 'u'], ['ш', 'i'], ['щ', 'o'], ['з', 'p'], ['х', '['], ['ъ', ']'], ['ф', 'a'],\r\n    ['ы', 's'], ['в', 'd'], ['а', 'f'], ['п', 'g'], ['р', 'h'], ['о', 'j'], ['л', 'k'], ['д', 'l'], ['ж', ';'], ['э', '\\''], ['я', 'z'], ['ч', 'x'], ['с', 'c'],\r\n    ['м', 'v'], ['и', 'b'], ['т', 'n'], ['ь', 'm'], ['б', ','], ['ю', '.'], ['.', '/'], ['ё', '`'],\r\n  ],\r\n);\r\n\n;// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\n\r\n\r\nconst main = createDomNode('div', 'main');\r\nconst virtualKeybord = createDomNode('div', 'virtual-keybord');\r\nconst src_textarea = createDomNode('textarea', 'textarea');\r\nsrc_textarea.setAttribute('rows', 5);\r\nsrc_textarea.setAttribute('cols', 50);\r\nconst lang = getLanguage();\r\nconst keybord = new Keybord(lang).createKeybord();\r\nconst description = createDomNode('p', 'description');\r\nconst language = createDomNode('p', 'language');\r\ndescription.innerText = 'Клавиатура создана в операционной системе Windows';\r\nlanguage.innerText = 'Для переключения языка комбинация Ctrl + Shift';\r\n\r\ndocument.body.append(main);\r\nmain.append(virtualKeybord);\r\nvirtualKeybord.append(src_textarea);\r\nvirtualKeybord.append(keybord);\r\nmain.append(description);\r\nmain.append(language);\r\nconst virtualKeys = document.querySelectorAll('.key');\r\n\r\nwindow.onload = function onload() {\r\n  addVirtualKeyClickhandler();\r\n  addKeyClickhandler();\r\n  addCtrlShiftClickHandler();\r\n};\r\nfunction getLanguage() {\r\n  return localStorage.getItem('lang');\r\n}\r\nfunction addVirtualKeyClickhandler() {\r\n  let key = '';\r\n  keybord.addEventListener('mousedown', (event) => {\r\n    event.preventDefault();\r\n    key = event.target;\r\n    if (key.classList.contains('key')) {\r\n      highlightKey(key);\r\n      print(key);\r\n    }\r\n  });\r\n  document.addEventListener('mouseup', () => {\r\n    virtualKeys.forEach((el) => removeHighlite(el));\r\n  });\r\n}\r\nfunction addKeyClickhandler() {\r\n  document.addEventListener('keydown', (event) => {\r\n    virtualKeys.forEach((key) => {\r\n      if (event.code === key.dataset.code) {\r\n        key.classList.add('key-push');\r\n      }\r\n    });\r\n  });\r\n  document.addEventListener('keyup', () => {\r\n    virtualKeys.forEach((key) => {\r\n      key.classList.remove('key-push');\r\n    });\r\n  });\r\n}\r\nfunction addCtrlShiftClickHandler() {\r\n  const pressed = new Set();\r\n  document.addEventListener('keydown', ({ code }) => {\r\n    changeLanguage(pressed, code);\r\n  });\r\n  keybord.addEventListener('mousedown', (event) => {\r\n    let code = '';\r\n    if (event.target.classList.contains('key')) {\r\n      code = event.target.dataset.code;\r\n      changeLanguage(pressed, code);\r\n    }\r\n  });\r\n  document.addEventListener('keyup', (event) => {\r\n    pressed.delete(event.code);\r\n  });\r\n  keybord.addEventListener('mouseup', (event) => {\r\n    pressed.delete(event.target.dataset.code);\r\n  });\r\n}\r\nfunction changeLanguage(pressed, code) {\r\n  pressed.add(code);\r\n  if ((pressed.has('ControlLeft') || pressed.has('ControlRight')) && (pressed.has('ShiftLeft') || pressed.has('ShiftRight'))) {\r\n    pressed.clear();\r\n\r\n    changeInnerText();\r\n    if (keybord.dataset.language === 'en') {\r\n      keybord.dataset.language = 'ru';\r\n      localStorage.setItem('lang', 'ru');\r\n    } else {\r\n      keybord.dataset.language = 'en';\r\n      localStorage.setItem('lang', 'en');\r\n    }\r\n  }\r\n}\r\nfunction changeInnerText() {\r\n  if (keybord.dataset.language === 'en') {\r\n    virtualKeys.forEach((key) => {\r\n      if (key.classList.contains('key_upperCase')) {\r\n        key.innerText = LETTERSru.get(key.innerText.toLowerCase()) || key.innerText;\r\n        key.innerText.toUpperCase();\r\n      } else {\r\n        key.innerText = LETTERSru.get(key.innerText) || key.innerText;\r\n      }\r\n    });\r\n  } else {\r\n    virtualKeys.forEach((key) => {\r\n      if (key.classList.contains('key_upperCase')) {\r\n        key.innerText = LETTERSen.get(key.innerText.toLowerCase()) || key.innerText;\r\n        key.innerText.toUpperCase();\r\n      } else {\r\n        key.innerText = LETTERSen.get(key.innerText) || key.innerText;\r\n      }\r\n    });\r\n  }\r\n}\r\nfunction highlightKey(element) {\r\n  element.classList.add('key-push');\r\n}\r\nfunction removeHighlite(element) {\r\n  element.classList.remove('key-push');\r\n}\r\nfunction print(element) {\r\n  if (!element.classList.contains('key_dark')) {\r\n    if (element.dataset.code === 'Space') {\r\n      src_textarea.setRangeText(' ', src_textarea.selectionStart, src_textarea.selectionEnd, 'end');\r\n    } else {\r\n      src_textarea.setRangeText(element.innerText, src_textarea.selectionStart, src_textarea.selectionEnd, 'end');\r\n    }\r\n    src_textarea.focus();\r\n  } else {\r\n    switch (element.dataset.code) {\r\n      case 'Backspace':\r\n        src_textarea.setRangeText('', src_textarea.selectionStart - 1, src_textarea.selectionEnd, 'end');\r\n        src_textarea.focus();\r\n        break;\r\n      case 'Delete':\r\n        src_textarea.setRangeText('', src_textarea.selectionStart, src_textarea.selectionEnd + 1, 'select');\r\n        src_textarea.focus();\r\n        break;\r\n      case 'Enter':\r\n        src_textarea.setRangeText('\\n', src_textarea.selectionStart, src_textarea.selectionEnd, 'end');\r\n        src_textarea.focus();\r\n        break;\r\n      case 'Tab':\r\n        src_textarea.setRangeText('\\t', src_textarea.selectionStart, src_textarea.selectionEnd, 'end');\r\n        src_textarea.focus();\r\n        break;\r\n      case 'CapsLock':\r\n        virtualKeys.forEach((el) => {\r\n          if (!el.classList.contains('key_dark')) {\r\n            el.classList.toggle('key_upperCase');\r\n          }\r\n        });\r\n        break;\r\n      case ('ShiftLeft' || 0):\r\n        break;\r\n      case 'ArrowUp':\r\n        src_textarea.setRangeText(element.innerText, src_textarea.selectionStart, src_textarea.selectionEnd, 'end');\r\n        src_textarea.focus();\r\n        break;\r\n      case 'ArrowLeft':\r\n        src_textarea.setRangeText(element.innerText, src_textarea.selectionStart, src_textarea.selectionEnd, 'end');\r\n        src_textarea.focus();\r\n        break;\r\n      case 'ArrowRight':\r\n        src_textarea.setRangeText(element.innerText, src_textarea.selectionStart, src_textarea.selectionEnd, 'end');\r\n        src_textarea.focus();\r\n        break;\r\n      case 'ArrowDown':\r\n        src_textarea.setRangeText(element.innerText, src_textarea.selectionStart, src_textarea.selectionEnd, 'end');\r\n        src_textarea.focus();\r\n        break;\r\n      default:\r\n        src_textarea.focus();\r\n    }\r\n  }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///915\n")}},__webpack_exports__={};__webpack_modules__[915]()})();